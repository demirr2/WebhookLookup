<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        iDRDRdHvaQAAAABJRU5ErkJggg==
</value>
  </data>
</root>